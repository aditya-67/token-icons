{"ast":null,"code":"var _jsxFileName = \"/Users/albertocevallos/Documents/active/skunk/token-icons/src/pages/list.js\";\nimport React, { useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/header';\nimport Info from '../components/list-info';\nimport Tokens from '../components/list-tokens';\nimport { useMultiFetch } from '../utils/useMultiFetch';\nimport { useLocation } from 'react-router-dom';\nimport '../index.css';\nconst Content = styled.section`\n  display: grid;\n  grid-template-columns: 300px 800px;\n  grid-gap: 48px;\n  position: relative;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    grid-gap: 24px;\n    padding: 0 1.5rem;\n  }\n`;\nconst Loading = styled.div`\n  height: 360px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nexport function getURLFromQuery(query) {\n  if (query === null || query === void 0 ? void 0 : query.startsWith('https://')) {\n    return query;\n  } else if (query === null || query === void 0 ? void 0 : query.endsWith('.eth')) {\n    return `http://${query}.link`;\n  } else {\n    return null;\n  }\n}\n\nfunction List() {\n  var _useLocation;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const search = (_useLocation = useLocation()) === null || _useLocation === void 0 ? void 0 : _useLocation.search;\n  const listID = useMemo(() => new URLSearchParams(search).get('url'), [search]);\n  const listIDs = useMemo(() => [listID], [listID]);\n  const {\n    list,\n    loading,\n    error\n  } = useMultiFetch(listIDs)[listID];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    back: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), !!!listID ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Invalid URL\") : error ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Sorry, we're having trouble loading this list.\"), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, listID)) : loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    listID: listID,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tokens, {\n    tokens: list.tokens,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/albertocevallos/Documents/active/skunk/token-icons/src/pages/list.js"],"names":["React","useEffect","useMemo","styled","Header","Info","Tokens","useMultiFetch","useLocation","Content","section","Loading","div","getURLFromQuery","query","startsWith","endsWith","List","window","scrollTo","search","listID","URLSearchParams","get","listIDs","list","loading","error","tokens"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,cAAP;AAEA,MAAMC,OAAO,GAAGN,MAAM,CAACO,OAAQ;;;;;;;;;;;;;CAA/B;AAeA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAI;;;;;;CAA3B;AAQA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,MAAIA,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEC,UAAP,CAAkB,UAAlB,CAAJ,EAAmC;AACjC,WAAOD,KAAP;AACD,GAFD,MAEO,IAAIA,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEE,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AAClC,WAAQ,UAASF,KAAM,OAAvB;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASG,IAAT,GAAgB;AAAA;;AACdhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,MAAM,mBAAGZ,WAAW,EAAd,iDAAG,aAAeY,MAA9B;AACA,QAAMC,MAAM,GAAGnB,OAAO,CAAC,MAAM,IAAIoB,eAAJ,CAAoBF,MAApB,EAA4BG,GAA5B,CAAgC,KAAhC,CAAP,EAA+C,CAACH,MAAD,CAA/C,CAAtB;AACA,QAAMI,OAAO,GAAGtB,OAAO,CAAC,MAAM,CAACmB,MAAD,CAAP,EAAiB,CAACA,MAAD,CAAjB,CAAvB;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BpB,aAAa,CAACiB,OAAD,CAAb,CAAuBH,MAAvB,CAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAAC,CAAC,CAACA,MAAH,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,GAEGM,KAAK,gBACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,MAAP,CAFF,CADO,GAKLK,OAAO,gBACT,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADS,gBAKT,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEL,MAAd;AAAsB,IAAA,IAAI,EAAEI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,IAAI,CAACG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdJ,CADF;AAsBD;;AAED,eAAeX,IAAf","sourcesContent":["import React, { useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Header from '../components/header'\nimport Info from '../components/list-info'\nimport Tokens from '../components/list-tokens'\nimport { useMultiFetch } from '../utils/useMultiFetch'\n\nimport { useLocation } from 'react-router-dom'\n\nimport '../index.css'\n\nconst Content = styled.section`\n  display: grid;\n  grid-template-columns: 300px 800px;\n  grid-gap: 48px;\n  position: relative;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    grid-gap: 24px;\n    padding: 0 1.5rem;\n  }\n`\n\nconst Loading = styled.div`\n  height: 360px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport function getURLFromQuery(query) {\n  if (query?.startsWith('https://')) {\n    return query\n  } else if (query?.endsWith('.eth')) {\n    return `http://${query}.link`\n  } else {\n    return null\n  }\n}\n\nfunction List() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const search = useLocation()?.search\n  const listID = useMemo(() => new URLSearchParams(search).get('url'), [search])\n  const listIDs = useMemo(() => [listID], [listID])\n  const { list, loading, error } = useMultiFetch(listIDs)[listID]\n\n  return (\n    <div className=\"app\">\n      <Header back={true} />\n      {!!!listID ? (\n        <Loading>Invalid URL</Loading>\n      ) : error ? (\n        <Loading>\n          <p>Sorry, we're having trouble loading this list.</p>\n          <code>{listID}</code>\n        </Loading>\n      ) : loading ? (\n        <Loading>\n          <p>Loading...</p>\n        </Loading>\n      ) : (\n        <Content>\n          <Info listID={listID} list={list} />\n          <Tokens tokens={list.tokens} />\n        </Content>\n      )}\n    </div>\n  )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}
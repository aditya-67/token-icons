{"ast":null,"code":"var _jsxFileName = \"/Users/albertocevallos/Documents/active/skunk/token-icons/frontend/src/components/copy.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useCopyClipboard } from '../utils/useCopy';\nimport { CheckCircle, Copy } from 'react-feather';\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  display: inline-block;\n  text-decoration: none;\n  width: fit-content;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`;\nexport default function CopyHelper({\n  toCopy\n}) {\n  const [isCopied, setCopied] = useCopyClipboard();\n  return /*#__PURE__*/React.createElement(CopyIcon, {\n    onClick: () => setCopied(toCopy),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, isCopied ? /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircle, {\n    size: '14',\n    stroke: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Copy, {\n    size: '14',\n    stroke: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/albertocevallos/Documents/active/skunk/token-icons/frontend/src/components/copy.js"],"names":["React","styled","useCopyClipboard","CheckCircle","Copy","CopyIcon","div","TransactionStatusText","span","theme","flexRowNoWrap","CopyHelper","toCopy","isCopied","setCopied"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,eAAlC;AAEA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;;CAA5B;AAcA,MAAMC,qBAAqB,GAAGN,MAAM,CAACO,IAAK;;IAEtC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;;CAFvC;AAOA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAgC;AAC7C,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBZ,gBAAgB,EAA9C;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMY,SAAS,CAACF,MAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,gBACP,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,IAAnB;AAAyB,IAAA,MAAM,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADO,gBAMP,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,IAAZ;AAAkB,IAAA,MAAM,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,CADF;AAcD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../utils/useCopy'\nimport { CheckCircle, Copy } from 'react-feather'\n\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  display: inline-block;\n  text-decoration: none;\n  width: fit-content;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <CheckCircle size={'14'} stroke=\"black\" />\n          {/* <TransactionStatusText>Copied</TransactionStatusText> */}\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <Copy size={'14'} stroke=\"black\" />\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}